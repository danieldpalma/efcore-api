// <auto-generated />
using System;
using FuscaFilmes.Repo.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FuscaFilmes.Repo.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20250813202956_O2O_DirectorDetail")]
    partial class O2O_DirectorDetail
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.18");

            modelBuilder.Entity("FuscaFilmes.Domain.Entities.Director", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Directors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Christopher Nolan"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Steven Spielberg"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Quentin Tarantino"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Martin Scorsese"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Greta Gerwig"
                        });
                });

            modelBuilder.Entity("FuscaFilmes.Domain.Entities.DirectorDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("DirectorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DirectorId")
                        .IsUnique();

                    b.ToTable("DirectorDetail");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bio = "Christopher Nolan's Bio",
                            BirthDate = new DateTime(1970, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DirectorId = 1
                        },
                        new
                        {
                            Id = 2,
                            Bio = "Steven Spielberg's Bio",
                            BirthDate = new DateTime(1946, 12, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DirectorId = 2
                        });
                });

            modelBuilder.Entity("FuscaFilmes.Domain.Entities.DirectorMovie", b =>
                {
                    b.Property<int>("DirectorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DirectorId", "MovieId");

                    b.HasIndex("MovieId");

                    b.ToTable("DirectorsMovies");

                    b.HasData(
                        new
                        {
                            DirectorId = 1,
                            MovieId = 1
                        },
                        new
                        {
                            DirectorId = 1,
                            MovieId = 2
                        },
                        new
                        {
                            DirectorId = 2,
                            MovieId = 3
                        },
                        new
                        {
                            DirectorId = 2,
                            MovieId = 4
                        },
                        new
                        {
                            DirectorId = 3,
                            MovieId = 5
                        },
                        new
                        {
                            DirectorId = 3,
                            MovieId = 6
                        },
                        new
                        {
                            DirectorId = 4,
                            MovieId = 7
                        },
                        new
                        {
                            DirectorId = 4,
                            MovieId = 8
                        },
                        new
                        {
                            DirectorId = 5,
                            MovieId = 9
                        },
                        new
                        {
                            DirectorId = 5,
                            MovieId = 10
                        });
                });

            modelBuilder.Entity("FuscaFilmes.Domain.Entities.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReleasedYear")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ReleasedYear = 2010,
                            Title = "Inception"
                        },
                        new
                        {
                            Id = 2,
                            ReleasedYear = 2014,
                            Title = "Interstellar"
                        },
                        new
                        {
                            Id = 3,
                            ReleasedYear = 1993,
                            Title = "Jurassic Park"
                        },
                        new
                        {
                            Id = 4,
                            ReleasedYear = 1993,
                            Title = "Schindler's List"
                        },
                        new
                        {
                            Id = 5,
                            ReleasedYear = 1994,
                            Title = "Pulp Fiction"
                        },
                        new
                        {
                            Id = 6,
                            ReleasedYear = 2012,
                            Title = "Django Unchained"
                        },
                        new
                        {
                            Id = 7,
                            ReleasedYear = 2013,
                            Title = "The Wolf of Wall Street"
                        },
                        new
                        {
                            Id = 8,
                            ReleasedYear = 1990,
                            Title = "Goodfellas"
                        },
                        new
                        {
                            Id = 9,
                            ReleasedYear = 2017,
                            Title = "Lady Bird"
                        },
                        new
                        {
                            Id = 10,
                            ReleasedYear = 2023,
                            Title = "Barbie"
                        });
                });

            modelBuilder.Entity("FuscaFilmes.Domain.Entities.DirectorDetail", b =>
                {
                    b.HasOne("FuscaFilmes.Domain.Entities.Director", "Director")
                        .WithOne("DirectorDetail")
                        .HasForeignKey("FuscaFilmes.Domain.Entities.DirectorDetail", "DirectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Director");
                });

            modelBuilder.Entity("FuscaFilmes.Domain.Entities.DirectorMovie", b =>
                {
                    b.HasOne("FuscaFilmes.Domain.Entities.Director", "Director")
                        .WithMany("DirectorsMovies")
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FuscaFilmes.Domain.Entities.Movie", "Movie")
                        .WithMany("DirectorsMovies")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Director");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("FuscaFilmes.Domain.Entities.Director", b =>
                {
                    b.Navigation("DirectorDetail");

                    b.Navigation("DirectorsMovies");
                });

            modelBuilder.Entity("FuscaFilmes.Domain.Entities.Movie", b =>
                {
                    b.Navigation("DirectorsMovies");
                });
#pragma warning restore 612, 618
        }
    }
}
